{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"#2. 0914_산술연산_다영ipynb","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyPLWO9UHiYMpP54yBQLU7mn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"KYp8eZ36r8w1"},"source":["#### 산술연산은 기본!! 가볍게 연습정도로!\n"]},{"cell_type":"code","metadata":{"id":"qTBfKsX6ejLw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1631594622212,"user_tz":-540,"elapsed":334,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"19db7d13-6227-46b3-dec5-3a23ea7677b6"},"source":["import pandas as pd\n","\n","student1 = pd.Series({'국어' : 100, '영어' : 80, '수학' : 90})\n","student2 = pd.Series({'수학' : 80, '국어' : 90, '영어' : 80})\n","print(student1)\n","print('\\n')\n","print(student2)\n","print('\\n')\n","\n","addition = student1 + student2\n","subtraction = student1 - student2\n","multiplication = student1 * student2\n","division = student1 / student2\n","print(type(division))\n","\n","#사칙 연산 결과를 DataFrame으로 합치기(시리즈 -> 데이터프레임)\n","result = pd.DataFrame([addition, subtraction, multiplication, division], ['덧셈','뺄셈','곱셈','나눗셈'])\n","print(result)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["국어    100\n","영어     80\n","수학     90\n","dtype: int64\n","\n","\n","수학    80\n","국어    90\n","영어    80\n","dtype: int64\n","\n","\n","<class 'pandas.core.series.Series'>\n","              국어        수학      영어\n","덧셈    190.000000   170.000   160.0\n","뺄셈     10.000000    10.000     0.0\n","곱셈   9000.000000  7200.000  6400.0\n","나눗셈     1.111111     1.125     1.0\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-0l6GYxmmzNR","executionInfo":{"status":"ok","timestamp":1631594894913,"user_tz":-540,"elapsed":405,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"28960552-41d5-46bf-a784-4dad94625f0d"},"source":["import pandas as pd\n","import numpy as np\n","\n","student1 = pd.Series({'국어' : np.nan, '영어' : 80, '수학' : 90})\n","student2 = pd.Series({'수학' : 80, '국어' : 90})\n","\n","print(student1)\n","print('/n')\n","print(student2)\n","print('/n')\n","\n","\n","addition = student1 + student2\n","subtraction = student1 - student2\n","multiplication = student1 * student2\n","division = student1 / student2\n","print(type(division))\n","\n","#사칙 연산 결과를 DataFrame으로 합치기(시리즈 -> 데이터프레임)\n","result = pd.DataFrame([addition, subtraction, multiplication, division], ['덧셈','뺄셈','곱셈','나눗셈'])\n","print(result)\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["국어     NaN\n","영어    80.0\n","수학    90.0\n","dtype: float64\n","/n\n","수학    80\n","국어    90\n","dtype: int64\n","/n\n","<class 'pandas.core.series.Series'>\n","     국어        수학  영어\n","덧셈  NaN   170.000 NaN\n","뺄셈  NaN    10.000 NaN\n","곱셈  NaN  7200.000 NaN\n","나눗셈 NaN     1.125 NaN\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"88_FjSXWoZVJ","executionInfo":{"status":"ok","timestamp":1631595089328,"user_tz":-540,"elapsed":335,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"33da84e0-6da0-4134-fa25-8e6562174ea1"},"source":["import pandas as pd\n","import numpy as np\n","\n","student1 = pd.Series({'국어' : np.nan, '영어' : 80, '수학' : 90})\n","student2 = pd.Series({'수학' : 80, '국어' : 90})\n","\n","print(student1)\n","print('/n')\n","print(student2)\n","print('/n')\n","\n","\n","sr_add = student1.add(student2, fill_value = 0)\n","sr_sub = student1.sub(student2, fill_value = 0)\n","sr_mul = student1.mul(student2, fill_value = 0)\n","sr_div = student1.div(student2, fill_value = 0)\n","\n","result = pd.DataFrame([sr_add, sr_sub, sr_mul, sr_div],\n","                      index = ['덧셈', '뺄셈', '곱셈', '나눗셈'])\n","\n","print(result)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["국어     NaN\n","영어    80.0\n","수학    90.0\n","dtype: float64\n","/n\n","수학    80\n","국어    90\n","dtype: int64\n","/n\n","       국어        수학    영어\n","덧셈   90.0   170.000  80.0\n","뺄셈  -90.0    10.000  80.0\n","곱셈    0.0  7200.000   0.0\n","나눗셈   0.0     1.125   inf\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sTO0Qa_GpNxz","executionInfo":{"status":"ok","timestamp":1631595269501,"user_tz":-540,"elapsed":1487,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"d2e13f60-3767-4ca1-847e-6e186913816b"},"source":["import pandas as pd\n","import seaborn as sns\n","\n","titanic = sns.load_dataset('titanic')\n","df = titanic.loc[:, ['age', 'fare']]\n","print(df.head())\n","print('\\n')\n","print(type(df))\n","print('\\n')\n","\n","#모든 데이터값에 10씩 더해진다 //  크기와 모양은 변하지 않고 값만 증가\n","addition = df + 10\n","print(addition.head())\n","print('\\n')\n","print(type(addition))\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["    age     fare\n","0  22.0   7.2500\n","1  38.0  71.2833\n","2  26.0   7.9250\n","3  35.0  53.1000\n","4  35.0   8.0500\n","\n","\n","<class 'pandas.core.frame.DataFrame'>\n","\n","\n","    age     fare\n","0  32.0  17.2500\n","1  48.0  81.2833\n","2  36.0  17.9250\n","3  45.0  63.1000\n","4  45.0  18.0500\n","\n","\n","<class 'pandas.core.frame.DataFrame'>\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sP7GcyrXqAT-","executionInfo":{"status":"ok","timestamp":1631595523296,"user_tz":-540,"elapsed":518,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"9c2c1c65-619b-4cea-bf32-fe84d61fb642"},"source":["import pandas as pd\n","import seaborn as sns\n","\n","titanic = sns.load_dataset('titanic')\n","df = titanic.loc[: ,['age', 'fare']]\n","print(df.tail())\n","print('\\n')\n","print(type(df))\n","print('\\n')\n","\n","addition = df + 10\n","print(addition.tail())\n","print('\\n')\n","print(type(addition))\n","print('\\n')\n","\n","subtraction = addition - df\n","print(subtraction.tail())\n","print('\\n')\n","print(type(subtraction))\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["      age   fare\n","886  27.0  13.00\n","887  19.0  30.00\n","888   NaN  23.45\n","889  26.0  30.00\n","890  32.0   7.75\n","\n","\n","<class 'pandas.core.frame.DataFrame'>\n","\n","\n","      age   fare\n","886  37.0  23.00\n","887  29.0  40.00\n","888   NaN  33.45\n","889  36.0  40.00\n","890  42.0  17.75\n","\n","\n","<class 'pandas.core.frame.DataFrame'>\n","\n","\n","      age  fare\n","886  10.0  10.0\n","887  10.0  10.0\n","888   NaN  10.0\n","889  10.0  10.0\n","890  10.0  10.0\n","\n","\n","<class 'pandas.core.frame.DataFrame'>\n"]}]},{"cell_type":"markdown","metadata":{"id":"EiVHhiV4cPLb"},"source":["#### 데이터 입출력\n","\n","데이터 입출력은 오류 없이 하는 게 중요! "]},{"cell_type":"code","metadata":{"id":"-H4KPT16q7n4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1631608691130,"user_tz":-540,"elapsed":364,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"2cd62705-53d8-49e8-f17f-3252bd83becf"},"source":["import pandas as pd\n","\n","df1 = pd.read_csv('read_csv_sample.csv', index_col = 0)\n","print(df1)\n","print('\\n')"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["    c1  c2  c3\n","c0            \n","0    1   4   7\n","1    2   5   8\n","2    3   6   9\n","\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8aLi6qFVc6W3","executionInfo":{"status":"ok","timestamp":1631608867742,"user_tz":-540,"elapsed":380,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"3b1fd08e-5413-4f39-e363-b3d8c658d1c4"},"source":["import pandas as pd\n","\n","df1 = pd.read_excel('df_sample.xlsx',engine = 'openpyxl' ,header = None)\n","print(df1)\n","print('\\n')"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["       0      1      2    3\n","0   name  algol  basic  c++\n","1  Jerry      A      C   B+\n","2   Riah     A+      B    C\n","3   Paul      B     B+   C+\n","\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uVdV8F5hdgir","executionInfo":{"status":"ok","timestamp":1631608937471,"user_tz":-540,"elapsed":409,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"89cc1fc7-cb83-4bac-d058-bce0fb1b71f6"},"source":["import pandas as pd\n","\n","df = pd.read_json('df_sample.json')\n","print(df)\n","print('\\n')\n","print(df.index)"],"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["      algol basic c++\n","Jerry     A     C  B+\n","Riah     A+     B   C\n","Paul      B    B+  C+\n","\n","\n","Index(['Jerry', 'Riah', 'Paul'], dtype='object')\n"]}]},{"cell_type":"markdown","metadata":{"id":"9OW8BLNveNiV"},"source":["### HTML 웹 페이지에서 표 속성 가져오기 \n","\n","<table> 태그에서 표 형식의 데이터를 모두 찾아서 데이터프레임으로 변환한다.\n","표 데이터들은 각각 별도의 데이터 프레임으로 변환되기 때문에 여러개의 데이터의 프레임을 원소로 갖는 리스트가 반환된다"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oTynwnf3eJdd","executionInfo":{"status":"ok","timestamp":1631609181050,"user_tz":-540,"elapsed":345,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"58601d6f-77be-4be2-8c5f-05ee659cb4b3"},"source":["import pandas as pd\n","\n","url = 'sample.html'\n","\n","tables = pd.read_html(url)\n","\n","print(len(tables))\n","print('\\n')\n","\n","for i in range(len(tables)):\n","  print(\"table[%s]\" % i)\n","  print(tables[i])\n","  print('\\n')\n","\n","df = tables[1]\n","\n","df.set_index(['name'], inplace = True)\n","print(df)"],"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n","\n","\n","table[0]\n","   Unnamed: 0  c0  c1  c2  c3\n","0           0   0   1   4   7\n","1           1   1   2   5   8\n","2           2   2   3   6   9\n","\n","\n","table[1]\n","         name  year        developer  opensource\n","0       NumPy  2006  Travis Oliphant        True\n","1  matplotlib  2003   John D. Hunter        True\n","2      pandas  2008    Wes Mckinneye        True\n","\n","\n","            year        developer  opensource\n","name                                         \n","NumPy       2006  Travis Oliphant        True\n","matplotlib  2003   John D. Hunter        True\n","pandas      2008    Wes Mckinneye        True\n"]}]},{"cell_type":"markdown","metadata":{"id":"Yh_cgSQ4fWD1"},"source":["웹 스크래핑!!\n","BeautifulSoup 파싱!"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1g-m1z-rdrCEdRPsW3sK8z2Id8PEys61b"},"id":"TRvcXwS0fDKJ","executionInfo":{"status":"error","timestamp":1631609797819,"user_tz":-540,"elapsed":30886,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"0ff1191e-3f75-4fdf-ce7d-8ac52f4d84a5"},"source":["from bs4 import BeautifulSoup\n","\n","import requests\n","import re\n","import pandas as pd\n","\n","url = \"https://en.wikipedia.org/wiki/List_of_American_exchange-traded_funds\"\n","resp = requests.get(url)\n","soup = BeautifulSoup(resp.text,'lxml')\n","rows = soup.select('div > ul > li')\n","\n","etfs = {}\n","\n","for row in rows : \n","\n","  try : \n","    etf_name = re.findall('^(.*) \\(NYSE', row.text)\n","    etf_market = re.findall('\\((.*)\\|', row.text)\n","    etf_ticker = re.findall('NYSE Arca\\|(.*)\\)', row.text)\n","\n","    if(len(etf_ticker) > 0 )& (len(etf_market) > 0) & (len (etf_name) > 0) :\n","      etfs[etf_ticker[0]] = [etf_market[0], etf_name[0]]\n","\n","  except AttributeError as err:\n","      pass\n","\n","  print(etfs)\n","  print('\\n')\n","\n","  df = pd.DataFrame(etfs)\n","  print(df)"],"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"W5jKq7lWhc61"},"source":["### API를 활용하여 데이터 수집하기\n","\n","구글 지오코딩 : 장소, 이름 또는 주소를 입력하면 위도와 경도 좌표 정보를 변환해 주는 서비스 , 서비스를 이용하려면 사용자 인증 후 API키를 발급받아야 한다."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OT7jEeWwhNyf","executionInfo":{"status":"ok","timestamp":1631610101937,"user_tz":-540,"elapsed":5763,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"c110579b-9ad4-41d4-950c-8aedf516f189"},"source":["pip install googlemaps"],"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting googlemaps\n","  Downloading googlemaps-4.5.3.tar.gz (32 kB)\n","Requirement already satisfied: requests<3.0,>=2.20.0 in /usr/local/lib/python3.7/dist-packages (from googlemaps) (2.23.0)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0,>=2.20.0->googlemaps) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0,>=2.20.0->googlemaps) (2021.5.30)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0,>=2.20.0->googlemaps) (2.10)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0,>=2.20.0->googlemaps) (3.0.4)\n","Building wheels for collected packages: googlemaps\n","  Building wheel for googlemaps (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for googlemaps: filename=googlemaps-4.5.3-py3-none-any.whl size=38479 sha256=a6485a48a6110b5e2d448e3e7a81f68d8f8ba7b266315608c7310ce71fe30eaa\n","  Stored in directory: /root/.cache/pip/wheels/fa/1a/1c/cc0b8a1652a3f06aea586b0e4714a81bafed830513969baf92\n","Successfully built googlemaps\n","Installing collected packages: googlemaps\n","Successfully installed googlemaps-4.5.3\n"]}]},{"cell_type":"code","metadata":{"id":"89oyhrvxh5mw","executionInfo":{"status":"ok","timestamp":1631610122178,"user_tz":-540,"elapsed":343,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}}},"source":["import googlemaps\n","import pandas as pd"],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":385},"id":"E_LpTYfAiqqK","executionInfo":{"status":"error","timestamp":1631612969784,"user_tz":-540,"elapsed":408,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"cf07220b-8528-4be2-861d-1a213d26d02d"},"source":["my_key =('서울시청', '국립국악원', '해운대해수욕장')\n","#구글 맵스 객체 작성하기\n","#키를 받으려면 구글가서 해야되는데 유료되서 안함!!!!\n","maps = googlemaps.Client(key=my_key)\n","\n","lat = []\n","lng = []\n","\n","places = ['서울시청', '국립국악원' , '해운대해수욕장']\n","\n","i = 0\n","for place in places:\n","  i = i + 1\n","  try:\n","    print(i, place)\n","    geo_location = maps.geocode(place)[0].get('geometry')\n","    lat.append(geo_location['location']['lat'])\n","    lng.append(geo_location['location']['lng'])\n","\n","  except:\n","    lat.append('')\n","    lng.append('')\n","\n","  df = DataFrame({'위도' : lat, '경도' : lng}, index = places)\n","  print('\\n')\n","  print(df)"],"execution_count":34,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-34-ea85cf875a75>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mmy_key\u001b[0m \u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'서울시청'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'국립국악원'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'해운대해수욕장'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m#구글 맵스 객체 작성하기\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mmaps\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgooglemaps\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mClient\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmy_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mlat\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/googlemaps/client.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, key, client_id, client_secret, timeout, connect_timeout, read_timeout, retry_timeout, requests_kwargs, queries_per_second, channel, retry_over_query_limit, experience_id, requests_session, base_url)\u001b[0m\n\u001b[1;32m    131\u001b[0m                              \"when creating client.\")\n\u001b[1;32m    132\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 133\u001b[0;31m         \u001b[0;32mif\u001b[0m \u001b[0mkey\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstartswith\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"AIza\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    134\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid API key provided.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    135\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'tuple' object has no attribute 'startswith'"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-BPY2c7ajX0s","executionInfo":{"status":"ok","timestamp":1631610935426,"user_tz":-540,"elapsed":378,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"92c63450-c25d-499e-8475-8c49e0a1e7b4"},"source":["import pandas as pd\n","\n","data = {'name' : ['Jerry', 'Riah', 'Paul'],\n","        'algol' : ['A', 'A+','B'],\n","        'basic' : ['C', 'B', 'B+'],\n","        'c++' : ['B+', 'C', 'C+'],\n","        }\n","df = pd.DataFrame(data)\n","\n","df.set_index('name', inplace =True)\n","print(df)\n","\n","df.to_csv('./df_sample.csv')"],"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["      algol basic c++\n","name                 \n","Jerry     A     C  B+\n","Riah     A+     B   C\n","Paul      B    B+  C+\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ch6efYWMlu85","executionInfo":{"status":"ok","timestamp":1631610963405,"user_tz":-540,"elapsed":341,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"7ad73bde-5f32-41db-82c6-5917bb17fe62"},"source":["import pandas as pd\n","\n","data = {'name' : ['Jerry', 'Riah', 'Paul'],\n","        'algol' : ['A', 'A+','B'],\n","        'basic' : ['C', 'B', 'B+'],\n","        'c++' : ['B+', 'C', 'C+'],\n","        }\n","df = pd.DataFrame(data)\n","\n","df.set_index('name', inplace =True)\n","print(df)\n","\n","df.to_csv('./df_sample.json')"],"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["      algol basic c++\n","name                 \n","Jerry     A     C  B+\n","Riah     A+     B   C\n","Paul      B    B+  C+\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2L3Ya3NGl4Ih","executionInfo":{"status":"ok","timestamp":1631610976692,"user_tz":-540,"elapsed":369,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"d6c58c0b-a36d-4a18-f559-278bdd1d98bc"},"source":["import pandas as pd\n","\n","data = {'name' : ['Jerry', 'Riah', 'Paul'],\n","        'algol' : ['A', 'A+','B'],\n","        'basic' : ['C', 'B', 'B+'],\n","        'c++' : ['B+', 'C', 'C+'],\n","        }\n","df = pd.DataFrame(data)\n","\n","df.set_index('name', inplace =True)\n","print(df)\n","\n","df.to_csv('./df_sample.xlsx')"],"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["      algol basic c++\n","name                 \n","Jerry     A     C  B+\n","Riah     A+     B   C\n","Paul      B    B+  C+\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WgrOxb35l7ZF","executionInfo":{"status":"ok","timestamp":1631612882227,"user_tz":-540,"elapsed":504,"user":{"displayName":"윤다영","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12266718765488164151"}},"outputId":"694868f1-88b0-4d57-b6e3-a54ecf628227"},"source":["import pandas as pd\n","\n","data1 = {'name' : ['Jerry', 'Riah', 'Paul'],\n","        'algol' : ['A', 'A+','B'],\n","        'basic' : ['C', 'B', 'B+'],\n","        'c++' : ['B+', 'C', 'C+'],\n","        }\n","\n","data2 = {'c0' : [1,2,3],\n","         'c1' : [4,5,6],\n","         'c2' : [7,8,9],\n","         'c3' : [10,11,12],\n","         'c4' : [13,14,15]}\n","\n","df1 = pd.DataFrame(data1)\n","df1.set_index('name', inplace = True)\n","print(df1)\n","print('\\n')\n","\n","df2 = pd.DataFrame(data2)\n","df2.set_index('c0', inplace = True)\n","print(df2)\n","\n","writer = pd.ExcelWriter('./df_excelwriter.xlsx')\n","df1.to_excel(writer, sheet_name = 'sheet1')\n","df2.to_excel(writer, sheet_name = 'sheet2')\n","writer.save()"],"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["      algol basic c++\n","name                 \n","Jerry     A     C  B+\n","Riah     A+     B   C\n","Paul      B    B+  C+\n","\n","\n","    c1  c2  c3  c4\n","c0                \n","1    4   7  10  13\n","2    5   8  11  14\n","3    6   9  12  15\n"]}]},{"cell_type":"code","metadata":{"id":"XP1G0zEmtI1Y"},"source":[""],"execution_count":null,"outputs":[]}]}